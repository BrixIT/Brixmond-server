settings: Settings
backtodashboard: Back to dashboard
yes: yes
no: no
empty: empty

auth:
    login: Login
    pwreset: Reset password
    backtologin: Back to login

roles:
    ROLE_USER: User
    ROLE_ADMIN: Admin
    ROLE_SUPER_ADMIN: Superadmin

timedomain:
    15min: 15 Min.
    hour: 1 Hour
    halfday: 12 Hours
    day:  1 Day

overview:
    title: Overview
    internet: Internet

audit:
    title: Audits

messages:
    title: Messages
    nomessages: No messages logged on this client
    buttons:
        charts: Charts
        details: Message details
        assign: Assign to me
        fix: Mark as fixed
        audits: Audits
    headings:
        severity: Severity
        acknowledged: Acknowledged
        fixed: Fixed
        note: Note
        extra: Extra information
    level:
        info: Info
        warning: Warning
        error: Error

charts:
    title: Charts
    titles:
        serverinfo: Server information
        systemload: System load
        cpuusage: CPU Usage
        top5processes: Top 5 processes
        physicalmemory: Physical memory
        swap: Swap
        networkpackets: Network packets
        networkbytes: Network bytes
        networkerrors: Network errors
        networksockets: Sockets
        diskusage: Disk usage and mounts
    buttons:
        messages: Messages
        audits: Audits
    headings:
        serverinfo:
            fqdn: FQDN
            cpu: CPU
            arch: Arch
            distro: Distro
        top5processes:
            process: Process
            cpu: CPU
            mem: Mem
        diskusage:
            device: Device
            mountpoint: Mountpoint
            type: Type
            size: Size
            used: Used

admin:
    title:
        base: Settings
        servers: Servers
        users: Users
        hosts: Hosts
        watches: Watches

    watches:
        title: Watches
        headings:
            name: Name
            type: Type
            system: System
            action: Action
        buttons:
            add: Add watch
            edit: Edit
            remove: Remove watch
        form:
            name:
                label: Name
                help: The name given to this watch, This is only used to identify it in the admin panel.
            type:
                label: Type
                help: Determines if this watch is triggered by a datapoint or info packet (specified by name below)
            system:
                label: System
                help: The name of the system monitor that this watch triggers on.
            expression:
                label: Expression
                help: >
                  This is a boolean expression that determines if this watch is triggered. The language is
                  Expression Language from Symfony2. More information in the sidebar.
            notificationtitle:
                label: Notification title template
                help: >
                  This is the title of the notification generated by this watch. The template language is twig.
                  More information in the sidebar.
            notificationmessage:
                label: Notification message template
                help: >
                 This is the message body for notifications generated by this watch. Also a twig template.
            action:
                label: Action on trigger
                help: >
                  This changes the priority of the notification generated or makes the notification system stop
                  for this packet.
            debug:
                label: Debug
                help: >
                  This saves the variable scope for every run to debug.
            save:
                label: Save
        types:
            point: Datapoint packet
            info: Info packet
        actions:
            info: Notification (info)
            warning: Notification (warning)
            error: Notification (error)
            drop: Drop notifications for packet
        sidebar: |
          <h2>Quick reference</h2>
          <p>
          Watches are symfony2 Expression Language expressions that determine when a notification is created.
          </p>
          <h3>Scope variables</h3>
          <p>
          In the expression and template fields the following variables and methods are available:
          </p>
          <pre><code>
          point:
            different for every packet
          previousPoint:
            the packet from the last run of this watch on the same server
          server:
            getFQDN()
            getDist()
            getArch()
            getCPU()
            getCores()
          info:
            processes:
              - mem: 10.2 # percentage
                cpu: 8.6  # percentage
                name: apache2 -k
              - mem: 85.5 # percentage
                cpu: 8.6  # percentage
                name: apache2 -k
            ip:
              eth0:
                v4:
                  - addr: 10.0.0.1
                    netmask: 255.255.255.0
                    broadcast: 10.0.0.255
                v6:
                  - addr: ::1
                    netmask: ffff:ffff....
            disk:
              - device: /dev/sda1
                mountpoint: /
                fstype: ext4
                usage:
                  total: 12343 # bytes
                  used: 2121   # bytes
                  free: 32342  # bytes
                  percent: 33  # percentage
          </code></pre>
          <h3>Expression Language</h3>
          <p>
              <b>Get the client cpu core count</b>:<br>
              <code>server.getCores()</code>
          </p>
          <p>
              <b>Basic math and comparison:</b><br>
              <code>point.load15min > (server.getCores() * 0.8)</code>
          </p>
          <p>
              <b>Access array keys:</b><br>
              <code>info.processes[0].name</code>
          </p>
          <p>More information on <a href="http://symfony.com/doc/2.6/components/expression_language/syntax.html">
          the Symfony website</a>
          </p>
          <h3>Twig templates</h3>
          <p>
            The notification message and title are formatted with Twig templates. These have access to the same variables
            as the expression
          </p>
          <p>
              <b>Get the client cpu core count:</b><br>
              <code>The server has {{ server.cores }} cores</code><br>
              Note that Twig automaticaly calls the getter getCores() on the server object for you. It is also possible
              to call <code>server.getCores()</code> yourself.
          </p>
          <p>
              <b>Access array keys:</b><br>
              <code>The first top process is {{ info.processes[0].name }}</code>
          </p>
          <p>
            More information is available in <a href="http://twig.sensiolabs.org/doc/templates.html">the Twig documentation</a>
          </p>

    users:
        headings:
            name: Name
            email: E-mail
            enabled: Enabled
            roles: Roles
            pushoverkey: Pushover Key
            lastlogin: Last login

        buttons:
            add: Add user
            testnotifications: Test notifications
            remove: Remove user
            edit: Edit

    servers:
        headings:
            hostname: Hostname
            secret: Secret
            distro: Distro
            messages: Messages
        new: New servers
        active: Active servers

    hosts:
        headings:
            hostname: Hostname
            name: Name
            type: Type
            parent: Parent
        types:
            server: Server
            edgerouter: Edge router
            vm: VM
            vps: VPS

        buttons:
            add: Add host

        form:
            name:
                label: Name
                help: This is the name displayed on the server graph.
            hostname:
                label: Hostname
                help: The IP or hostname for this host. Used by ping tests.
            type:
                label: Type
                help: This changes how the node is rendered in the server graph.
            client:
                label: Client
                help: If this host has the Brixmond client running then you can link it to a client here.
            parent:
                label: Parent
                help: >
                  Choose the upstream node for this node (like the hypervisor for a vm or a edge router for a hypervisor).
                  Leave blank to render it connected directly to the internet.
            save:
                label: Save

entity:
    edit: Edit
    remove: Remove
    add: Add